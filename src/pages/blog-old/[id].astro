---
import { addDays, format } from 'date-fns/fp';
import Markdown from 'astro/components/Markdown.astro';
import { query, doc, DocumentData, getDoc, getDocs, collection } from "firebase/firestore";
import MainHead from '../../components/MainHead.astro';
import Footer from '../../components/Footer/index.jsx';
import Nav from '../../components/Nav/index.jsx';
import { db } from '../../js/init';
import hljs from 'highlight.js';
import javascript from 'highlight.js/lib/languages/javascript';
import typescript from 'highlight.js/lib/languages/typescript';
import css from 'highlight.js/lib/languages/css';
import markdown from 'highlight.js/lib/languages/markdown';
import bash from 'highlight.js/lib/languages/bash';
import json from 'highlight.js/lib/languages/json';
import dockerfile from 'highlight.js/lib/languages/dockerfile';
import xml from 'highlight.js/lib/languages/xml';
import yaml from 'highlight.js/lib/languages/yaml';
// import MyRender from '../../components/Render';

const supportedLanguages = {
  javascript,
  typescript,
  css,
  markdown,
  bash,
  json,
  dockerfile,
  yaml,
  xml,
};

for (const lang in supportedLanguages) {
  hljs.registerLanguage(lang, supportedLanguages[lang]);
}

interface IProject extends DocumentData {
	id: string | undefined
}

export async function getStaticPaths() {
  const blogsRef = await getDocs(query(collection(db, 'posts')));
  const blogs: IProject[] = [];
  blogsRef.forEach(doc => {
    const blog = { id: doc.id };
    blogs.push(blog);
  });

  return blogs.map(blog => ({params: blog}));
}

const {id} = Astro.params;

const blogRef = await getDoc(doc(db, 'posts', String(id)));
let content: IProject; 
if (blogRef.exists()) {
  content = {...blogRef.data(), id: blogRef.id};
} else {
  content = {
    id: '',
    title: '',
    description: '',
    authorProfile: '',
    authorName: '',
    likes: 0
  }
}


const {Content, frontmatter} = Astro.props;
console.log(frontmatter)
---

<html lang={content.lang || 'en'}>
	<head>
		<MainHead title={content.title} description={content.description} />
    <link rel="stylesheet" href="../../css/prism.css" />
	</head>
	<body>
		<div class="container">
			<Nav />
      <header class="section hero">
				<h2 class="section__heading left">{content.title}</h2>
        <div class="section__action">
          <div class="author">
            <div class="author__profile">
              <img src={content.authorProfile} alt="blog-author" />
            </div>
            <div class="author__details">
              <h3>{content.authorName || 'RedJanvier'}</h3>
              <p>{format('MMMM, do yyy', content.createdAt)}</p>
            </div>
          </div>
				</div>
			</header>
      <section class="section blog">
        <!-- <MyRender content={content.body || content.content}/> -->
				<div class="blog__reactions">
				<button class="like btn " onclick="toggleLike()">
					<i class="fa fa-heart-o"></i> <span class="unhide">{content.likes || 0}</span>
				</button>
				</div>
			</section>
			<Footer />
		</div>
		<script is:inline src="/js/utils.js"></script>
		<script is:inline src="/js/slides.js"></script>
	</body>
</html>
